"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TheConfig = void 0;
var js_yaml_1 = require("js-yaml");
var fs = __importStar(require("fs"));
var ts_dot_prop_1 = require("ts-dot-prop");
// eslint-disable-next-line import/prefer-default-export
var TheConfig = /** @class */ (function () {
    function TheConfig(filePath, data) {
        this.filePath = filePath;
        this.data = data;
        this.filePath = filePath;
        this.data = data;
    }
    TheConfig.fromFile = function (filePath) {
        return {
            andPath: function (data) { return new TheConfig(filePath, data); },
        };
    };
    TheConfig.prototype.retrieveData = function () {
        var fileLoaded = (0, js_yaml_1.load)(fs.readFileSync(this.filePath, 'utf-8'));
        var value = (0, ts_dot_prop_1.get)(fileLoaded, this.data);
        if (value === undefined) {
            throw new Error('Path not found!');
        }
        else {
            return value;
        }
    };
    return TheConfig;
}());
exports.TheConfig = TheConfig;
